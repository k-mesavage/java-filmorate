DROP TABLE IF EXISTS rating, genre, film_genre_list, films, users, likes, friends CASCADE;



CREATE TABLE IF NOT EXISTS genre
(
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar(255) not null unique
);

CREATE TABLE IF NOT EXISTS rating
(
    rating_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    description varchar(500) DEFAULT 'Нет описания.',
    release_date timestamp,
    duration int,
    rate real,
    rating_id int references rating (rating_id)
);



CREATE TABLE IF NOT EXISTS film_genre_list
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id int REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id int REFERENCES genre (genre_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users
(
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    login varchar(255) NOT NULL,
    birthday timestamp
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id int REFERENCES films (film_id) ON DELETE CASCADE,
    user_id int  REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY(film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id int  REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id int  REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY(user_id, friend_id)
);